<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="pmd"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>PMD rule set for gedbrowser</description>
	<!-- basic -->
        <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
        <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
        <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
        <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
        <rule ref="category/java/errorprone.xml/BrokenNullCheck" />
        <rule ref="category/java/errorprone.xml/CheckSkipResult" />
        <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
        <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
        <rule ref="category/java/errorprone.xml/JumbledIncrementer" />
        <rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
        <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
        <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
        <rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />

        <rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
        <rule ref="category/java/multithreading.xml/DontCallThreadRun" />
        <rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />

        <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
        <rule ref="category/java/bestpractices.xml/CheckResultSet" />

        <rule ref="category/java/codestyle.xml/ExtendsObject" />
        <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />

        <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
        <rule ref="category/java/performance.xml/BooleanInstantiation" />

        <rule ref="category/java/design.xml/CollapsibleIfStatements" />
        <!-- rule ref="category/java/design.xml/SimplifiedTernary" / -->

	<!-- unusedcode -->
        <rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
        <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
        <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
        <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />

	<!-- imports -->
        <rule ref="category/java/bestpractices.xml/UnusedImports" />

        <rule ref="category/java/errorprone.xml/ImportFromSamePackage" />

        <rule ref="category/java/codestyle.xml/DontImportJavaLang" />
        <rule ref="category/java/codestyle.xml/DuplicateImports" />
        <!-- rule ref="category/java/codestyle.xml/TooManyStaticImports" / -->
        <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />

	<!-- coupling -->
        <rule ref="category/java/bestpractices.xml/LooseCoupling" />

        <rule ref="category/java/design.xml/CouplingBetweenObjects" />
        <rule ref="category/java/design.xml/ExcessiveImports" />
	<!-- I hate the Law of Demeter check!!! -->
        <!-- rule ref="category/java/design.xml/LawOfDemeter" / -->
	<!-- Apparently this next one is broken -->
        <!-- rule ref="category/java/design.xml/LoosePackageCoupling" / -->

	<!-- design -->
        <!-- Skipped next. Not sure why -->
        <!-- rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" / -->
        <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
        <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
        <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
	<!-- Skipped next because throws NPE
        <rule ref="category/java/design.xml/GodClass" />
        -->
        <rule ref="category/java/design.xml/ImmutableField" />
        <rule ref="category/java/design.xml/LogicInversion" />
        <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
        <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
        <rule ref="category/java/design.xml/SimplifyConditional" />
        <rule ref="category/java/design.xml/SingularField" />
        <rule ref="category/java/design.xml/SwitchDensity" />
        <rule ref="category/java/design.xml/UseUtilityClass" />

        <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
        <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
        <rule ref="category/java/errorprone.xml/BadComparison" />
        <rule ref="category/java/errorprone.xml/CloseResource" />
        <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
        <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
        <rule ref="category/java/errorprone.xml/EqualsNull" />
        <rule ref="category/java/errorprone.xml/IdempotentOperations" />
        <rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
        <rule ref="category/java/errorprone.xml/MissingBreakInSwitch" />
        <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
        <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
        <rule ref="category/java/errorprone.xml/NonStaticInitializer" />
        <!-- Skipped next few. Not sure why -->
        <!-- rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull" / -->
        <!-- rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale" / -->
        <!-- rule ref="category/java/errorprone.xml/SingleMethodSingleton" / -->
        <!-- rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance" / -->
        <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions" />

        <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
        <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
        <rule ref="category/java/codestyle.xml/ConfusingTernary" />
        <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
        <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
        <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />

        <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel" />
        <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton" />
        <rule ref="category/java/multithreading.xml/UnsynchronizedStaticDateFormatter" />
        <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify" />

        <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
        <rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
        <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration" />
        <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
        <rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
        <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
        <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons" />
        <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons" />
        <rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
        <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
        <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
        <rule ref="category/java/bestpractices.xml/UseVarargs" />

        <rule ref="category/java/performance.xml/OptimizableToArrayCall" />
        <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement" />

        <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
        <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody" />

	<!-- codesize.xml -->
	<!-- Skipped next because throws NPE
        <rule ref="category/java/design.xml/CyclomaticComplexity" />
        -->
        <rule ref="category/java/design.xml/ExcessiveClassLength" />
        <rule ref="category/java/design.xml/ExcessiveMethodLength" />
        <rule ref="category/java/design.xml/ExcessiveParameterList" />
        <rule ref="category/java/design.xml/ExcessivePublicCount" />
        <rule ref="category/java/design.xml/ModifiedCyclomaticComplexity" />
        <rule ref="category/java/design.xml/NcssConstructorCount" />
        <rule ref="category/java/design.xml/NcssMethodCount" />
        <rule ref="category/java/design.xml/NcssTypeCount" />
        <rule ref="category/java/design.xml/NPathComplexity" />
        <rule ref="category/java/design.xml/StdCyclomaticComplexity" />
        <rule ref="category/java/design.xml/TooManyFields" />
        <rule ref="category/java/design.xml/TooManyMethods">
            <properties><property name="maxmethods" value="15"/></properties>
        </rule>

        <!-- braces -->
        <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces" />
        <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces" />
        <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces" />
        <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces" />

	<!-- comments -->
        <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier" />

        <rule ref="category/java/documentation.xml/CommentContent" />
        <rule ref="category/java/documentation.xml/CommentRequired" />
        <rule ref="category/java/documentation.xml/CommentSize" />

	<!-- junit -->
        <rule ref="category/java/errorprone.xml/JUnitSpelling" />
        <rule ref="category/java/errorprone.xml/JUnitStaticSuite" />
        <rule ref="category/java/errorprone.xml/TestClassWithoutTestCases" />
        <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion" />

        <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage" />
        <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts" />
        <rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert" />
        <rule ref="category/java/bestpractices.xml/UseAssertEqualsInsteadOfAssertTrue" />
        <rule ref="category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue" />
        <rule ref="category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue" />
        <rule ref="category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals" />

        <rule ref="category/java/design.xml/SimplifyBooleanAssertion" />

	<!-- optimizations -->
        <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" />
        <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" />
        <rule ref="category/java/codestyle.xml/PrematureDeclaration" />

        <rule ref="category/java/performance.xml/AddEmptyString" />
        <rule ref="category/java/performance.xml/AvoidArrayLoops" />
        <rule ref="category/java/performance.xml/AvoidInstantiatingObjectsInLoops" />
        <rule ref="category/java/performance.xml/RedundantFieldInitializer" />
        <rule ref="category/java/performance.xml/SimplifyStartsWith" />
        <rule ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation" />
        <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector" />
        <rule ref="category/java/performance.xml/UseArraysAsList" />
        <rule ref="category/java/performance.xml/UseStringBufferForStringAppends" />

	<!-- sunsecure -->
        <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
        <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />

        <!-- clone -->
        <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
        <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
        <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
        <rule ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException" />
        <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />

	<!-- NEW STUFF -->
	<!-- Skipped because sometimes throws NPE. -->
        <!-- rule ref="category/java/design.xml/DataClass" / -->
	<rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
	<rule ref="category/java/errorprone.xml/DoNotExtendJavaLangThrowable" />
	<!--
	Introduces new warnings. Not ready to resolve.
	<rule ref="category/java/performance.xml/AvoidFileStream" />
	-->
	<!--
	Introduces a whole bunch of new warnings. Not ready to resolve.
        <rule ref="category/java/design.xml/NcssCount" />
	-->
</ruleset>
